%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (C:/Users/ADMINI~1/AppData/Local/Temp/magick-512r4mzBDOhw4z-)
%%CreationDate: (2018-08-13T09:57:48+08:00)
%%BoundingBox: -0 -0 27 26
%%HiResBoundingBox: 0 0 27.0266 26
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 27 26
userdict begin
DisplayImage
0 0
27.0266 25.5251
12
18 17
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFDF8F2F6FEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFEF7F7F7F8F8FDFFFFFFF7F3D991875B638B9BEEF8FCFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFF2E5DFAEABC7A4ABA1CFE0F2FFFFFFDDDDDDE4E4FCFFFFFFEFEADED7E7E8C3A87C
D2E9F5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE8D6C87C857183A49BCADEEBD2CDC79B9B9B
A09FB3D2D7EFFFFFFFF9EDDBBBCEDBF8FEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4EEDF
BFC8D4DFCECCD7D7D2A39E92676666696979A7B2DFF7F2EDBFBDC4D7E2E4EFF4FEFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFF6E9D4CFE7F2D7BB94BBCDD9FFFFFFE3E2E2EAEAFFFFFFFFE0CCAF
5B585C6A7272DBEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFBFBFAFAFAF8F8F6F8F9F9
F9F8F6E2E3E3E6E6F1F8F8F8F7F7F5F2F2F1F1F1F3FCFCFCFFFFFFFFFFFFFFFAE4C4BCBCD1E2ED
FFFFFF9FA0A06161616161626161616161636E717777716C636161616162636363636363B5B5B4
FFFFFFFFFFF5A9B086636F72716369D1DAE8FAFAFAF6F6F6F6F6F6F6F6F6F5F5E9B3A173779FB8
ECF6F6F6F6F6F6F6F6F6F6F6FBFBFBFFFFFFFBE7BA81877CF0FFFFDBB26F62A5B4FFFFFFFFFFFF
FFFFFFFFFFFFF3EBD5AFBCAD978E6ACBE4EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBBFA098709F
FCFFFFE5D3AD559BB6FAFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFEF6C9C6BBE2F1F7FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFE6B6A19672B6FFFFFFE4D0B05899B8FAFFFFFFFFFFFFFFFFFFFFFFFFFFFD
E0DDD8D9EDF9FAFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6D8AA917D7DF9FFFFE4CA8D54A1B2
FCFFFFFFFFFFFFFFFFFFFFFFE8D6BC645D66777D77CBE1F7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFAE383967C94B2B19C737EB2C9E0FFFFFFFFFFFFFFFFFFFFFFFFF6EEE2BCBBBAB9BCC0EFF8FD
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBD8B47A7777A3B3C8FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF

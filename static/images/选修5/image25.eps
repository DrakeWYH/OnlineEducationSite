%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (C:/Users/ADMINI~1/AppData/Local/Temp/magick-532DNnDVPcWSL3v)
%%CreationDate: (2018-08-15T08:49:03+08:00)
%%BoundingBox: -0 -0 67 70
%%HiResBoundingBox: 0 0 66.9038 70
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 67 70
userdict begin
DisplayImage
0 0
66.9038 69.9449
12
22 23
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE3DCFFA29EFFE3E9FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCAB9FF2212FFC4D3FFFFFFFFFFFFFF5442FF8DA7FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFF624FFFBFCEFFFFFFFFFFFFFFB7ABFFCED5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5C4BFFC0CF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5C4BFFC0CFFFFFFFFFFFFFFFFFFFFFF7F8
FFFFFFFFFFFFFFFFFFFFF9F9FFFFFFFFF5F5FFFFFFFFFFFFFFFFFFFFF9F7FFFAFCFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFF5C4BFFC0CFFFFFFFFFE3DDFF5049FFA4B2FFFFFFFFC7B4FF453BFF6F75
FFAEA6FFB0B0FF6F71FFB5C5FFD3CCFFB3ABFF8E82FF949DFFFFFFFFFFFFFFFFFFFFFFFFFF5C4B
FFC0CFFFFFFFFFF7F5FF624FFF93A2FFFFFFFFF6F6FF8556FF2433FFE0EAFFFFFFFFD3C2FF1E2F
FFC4D5FFFFFFFFF7ECFF393FFFCBE5FFFFFFFFFFFFFFFFFFFF5C4BFFC0CFFFFFFFFFFFFFFF826B
FF95A3FFFFFFFFFFFFFFA573FF6B6FFFFFFFFFFFFFFFEEE0FF4350FFF7FFFFFFFFFFFFFFFF5A48
FFA7CDFFFFFFFFFFFFFFFFFFFF5C4BFFC0CFFFFFFFFFFFFFFF7E68FF95A3FFFFFFFFFFFFFFA06F
FF6C6DFFFFFFFFFFFFFFE9DBFF4450FFF3FEFFFFFFFFFFFFFF5B47FFABCEFFFFFFFFFFFFFFFFFF
FF604FFFC7D4FFFFFFFFFFFFFF816DFF9AA7FFFFFFFFFFFFFFA472FF6F71FFFFFFFFFFFFFFEEE1
FF4855FFF9FFFFFFFFFFFFFFFF604BFFB3D6FFFFFFFFFFFFFFF5F1FF3625FF96AEFFFDFEFFFEFB
FF6443FF6F84FFFDFEFFFCF7FF8051FF494DFFF3F6FFFFFFFFCBB6FF1F26FFD0DDFFFFFFFFEBE7
FF3324FF789CFFF7FAFFFFFFFFBFB0FF615FFF717AFFE2E6FFE6DDFF7263FF6874FFDFE9FFECD5
FF6E66FF6465FFC1CCFFFFFCFF8677FF5F5EFF8D98FFFFFFFFA59AFF5F60FF6266FFE1EAFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9F7FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFB4A6FFD5E0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFCFCBFFB9AEFFE1E4FFFFFFFFFFFFFFFFFFFFF8F8FFC3B8
FF939BFFFFFFFFFFFFFFEDEDFF9999FFEEEEFFFFFFFFFFFFFFF8F4FFA9A0FFB6BCFFEEEFFFFFFF
FFE5E0FFC3D2FFFDFCFFBFC5FFFCFFFFFFFFFFFFFFFFE4E4FFFFFFFF9C93FFD0DDFFFFFFFFBABA
FF2020FF9B9BFFAFAFFFAFAFFFAEAEFF5B4BFF0000FF5F65FFDCE3FFDCC2FFDEDDFFFFFFFFB3B4
FFF0F8FFFFFFFFF9F5FFECEFFFFFFFFFEDE1FF969DFFFFFFFFC1C0FF8989FFFFFFFFFCFCFFFCFC
FFF3EFFFADAAFFC8CCFFF6F7FFFEFEFFD7C7FFD8DDFFFFFFFFB4BAFFF3FBFFFFFFFFCFCBFFBFC2
FFCBCBFFCECEFF726DFFD7E2FF6C6AFFA5A5FFF6F6FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFEEE9FFBFCDFFEEEDFFCDCAFFFFFFFFFFFFFFBBB4FF7979FF7878FF7878FF7A7CFFDDE6
FFA09EFFBCBCFFF3F3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE3E2FFBDC2
FFF9FBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
